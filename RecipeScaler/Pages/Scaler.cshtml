@page
@model RecipeScaler.Pages.ScalerModel
@{
    ViewData["Title"] = "Recipe Scaler";
}

<h1>Recipe Scaler</h1>

@* Main form for entering servings and ingredients *@
<form method="post">
    @* Input: Original number of servings the recipe is for *@
    <div class="mb-3">
        <label>Original Servings:</label>
        <input asp-for="OriginalServings" class="form-control" placeholder="Enter the number of servings from the original recipe. If there is a range, use your own discretion." type="number" value="" required />
    </div>

    @* Input: Desired number of servings to scale the recipe to *@
    <div class="mb-3">
        <label>Desired Servings:</label>
        <input asp-for="DesiredServings" class="form-control" placeholder="Enter the number of servings you want to scale to." type="number" value="" required />
    </div>

    <h4>Ingredients</h4>

    @* Container that holds all ingredient rows; JS will add more here *@
    <div id="ingredients-container">
        @for (int i = 0; i < Model.Ingredients.Count; i++)
        {
            <div class="row mb-2 ingredient-row">
                <div class="col">
                    <input asp-for="Ingredients[@i].Name" class="form-control" placeholder="Ingredient name" />
                </div>
                <div class="col">
                    <input asp-for="Ingredients[@i].Quantity" class="form-control" placeholder="Quantity" type="number" value="" step="any" required />
                </div>
                <div class="col">
                    @* Dropdown for selecting the unit of measurement *@
                    <select asp-for="Ingredients[@i].Unit" class="form-control">
                        <option value="cup">Cups</option>
                        <option value="tbsp">Tablespoons(tbsp)</option>
                        <option value="tsp">Teaspoons(tsp)</option>
                        <option value="ml">Milliliters(ml)</option>
                        <option value="l">Liters(l)</option>
                        <option value="g">Grams(g)</option>
                        <option value="kg">Kilograms(kg)</option>
                        <option value="oz">Ounces(oz)</option>
                        <option value="lb">Pounds(lb)</option>
                        <option value="unit">Units(e.g. 1 egg)</option>
                    </select>
                </div>
                <div class="col-auto">
                    <button type="button" class="btn btn-danger" onclick="removeIngredient(this)">Remove</button>
                </div>
            </div>
        }
        
    </div>

    @* Button to add more ingredient rows dynamically *@
    <button type="button" class="btn btn-secondary mb-3" onclick="addIngredient()">Add Ingredient</button>

    @* Submit button to scale the recipe *@
    <button type="submit" class="btn btn-primary mb-3">Scale Recipe</button>
</form>

@* If we have scaled ingredients to display, show them as a list *@
@if (Model.ScaledIngredients.Any())
{
    <h4 class="mt-4">Scaled Ingredients</h4>
    <ul>
        @foreach (var ingredient in Model.ScaledIngredients)
        {
            <li>@ingredient.Unit @ingredient.Name</li>
        }
    </ul>
}

@* Section to load page-specific scripts *@
@section Scripts {
    @* Reference to external JavaScript file *@
    <script src="~/js/scaler.js?v=@DateTime.Now.Ticks"></script>
}